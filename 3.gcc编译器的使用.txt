GCC 编译器

一、前言
1.GCC编译器支持 Go,Objective-C ,Objective-C++ Fortran,Ada,D和BRIG(HSAIL)等程序;
2.Linux开发c/c++一定要熟悉GCC


三、编译 
3.1编译过程
1.预处理 -pre-processing
# -E选项指示编译器仅对输入文件进行预处理
g++ -E test.cpp -o test.i //.i文件

2.编译-compiling
#-S 编译选项，告诉G++在为C++代码产生了汇编语言文件后停止编译
# g++ 产生的汇编语言文件的缺省扩展名是 .S
g++ -S test.i -o test.s

3.汇编-Assembling
# -c 选项告诉g++ 仅把源代码编译为机器语言的目标代码
# 缺省时 g++ 建立的目标代码有一个.o的扩展名
g++ -c test.s -o test.o

4.链接-linking
# -o 编译选项来为将产生的可执行文件指定的文件名
g++ test.o -o test


3.2 g++ 重要编译参数

1. -g 编译带调试信息的可执行文件

2. -O[n] 优化源代码

3. -l和-L 指定库文件 | 指定库文件路径
-l参数(小写)就是用来指定程序要链接的库,-l参数紧接着就是库名
#在/lib和/usr/lib和/usr/local/lib里的库直接用-l参数就能链接

#链接glog库
g++ -lglog test.cpp

#如果库文 件没有放在上面三个目录，需要使用-L参数(大写)指定库文件所在目录
# -L参数跟着的是库文件所在的目录名

#链接mytest库,libmytest.so在/home/bing/mytestlibfolder目录下
g++ -L/home/bing/mytestlibfolder -lmytest test.cpp

4.-I 指定头文件搜索目录
# -I 
# /usr/include目录一般是不用指定的，gcc知道去那里找，但是如果头文件不在/usr/include里我们就要用-I参数指定,
# 比如头文件在/myinclude目录里，那编译命令就要加上 -I/myinclude参数了
# 比如你不加，你会得到一个"xxxx.h No Such file or directory"的错误，-I参数可以用相对路径,比如头文件在当前目录,可以用-I.来指定。
# 上面我们提到的-cflags参数就是用来生成-I参数的.
> g++ -I/myinclude test.cpp

5.-Wall 打印警告信息
# 打印出gcc提供的警告信息
> g++ -Wall test.cpp

6.-w 关闭警告信息
#关闭所有警告信息
> g++ -w test.cpp

7.-std=c++11 设置编译标准
#使用c++11,标准编译test.cpp
g++ -std=c++11 test.cpp

8 -o 指定输出文件名
# 指定即将产生的文件名
# 指定输出可执行文件名为test
g++ test.cpp -o test

9,-D 定义宏
# 在使用gcc/g++编译的时候定义宏

#常用场景
# -DDEBUG 定义DEBUG宏，可能文件中有DEBUG宏部分的相关信息，用个DDEBUG来选择开启或关闭DEBUG


四、一个step3实例
五、生成一个静态库
g++ swap.cpp -c -I../include
ar rs libSwap.a Swap.o

六、生成一个动态库
